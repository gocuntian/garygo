// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

/*
Package order is a generated protocol buffer package.

It is generated from these files:
	order.proto

It has these top-level messages:
	Order
	OrderResponse
	OrderFilter
	ServiceDiscovery
	EventStore
*/
package order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	OrderId    string             `protobuf:"bytes,1,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
	Status     string             `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	CreateOn   int64              `protobuf:"varint,3,opt,name=create_on,json=createOn" json:"create_on,omitempty"`
	OrderItems []*Order_OrderItem `protobuf:"bytes,4,rep,name=order_items,json=orderItems" json:"order_items,omitempty"`
}

func (m *Order) Reset()                    { *m = Order{} }
func (m *Order) String() string            { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()               {}
func (*Order) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Order) GetCreateOn() int64 {
	if m != nil {
		return m.CreateOn
	}
	return 0
}

func (m *Order) GetOrderItems() []*Order_OrderItem {
	if m != nil {
		return m.OrderItems
	}
	return nil
}

type Order_OrderItem struct {
	Code      string  `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Name      string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	UnitPrice float32 `protobuf:"fixed32,3,opt,name=unit_price,json=unitPrice" json:"unit_price,omitempty"`
	Quantity  int32   `protobuf:"varint,4,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *Order_OrderItem) Reset()                    { *m = Order_OrderItem{} }
func (m *Order_OrderItem) String() string            { return proto.CompactTextString(m) }
func (*Order_OrderItem) ProtoMessage()               {}
func (*Order_OrderItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Order_OrderItem) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Order_OrderItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order_OrderItem) GetUnitPrice() float32 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *Order_OrderItem) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type OrderResponse struct {
	IsSuccess bool   `protobuf:"varint,1,opt,name=is_success,json=isSuccess" json:"is_success,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *OrderResponse) Reset()                    { *m = OrderResponse{} }
func (m *OrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()               {}
func (*OrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OrderResponse) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func (m *OrderResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type OrderFilter struct {
	SearchText string `protobuf:"bytes,1,opt,name=search_text,json=searchText" json:"search_text,omitempty"`
}

func (m *OrderFilter) Reset()                    { *m = OrderFilter{} }
func (m *OrderFilter) String() string            { return proto.CompactTextString(m) }
func (*OrderFilter) ProtoMessage()               {}
func (*OrderFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *OrderFilter) GetSearchText() string {
	if m != nil {
		return m.SearchText
	}
	return ""
}

type ServiceDiscovery struct {
	OrderServiceUrl string `protobuf:"bytes,1,opt,name=order_service_url,json=orderServiceUrl" json:"order_service_url,omitempty"`
}

func (m *ServiceDiscovery) Reset()                    { *m = ServiceDiscovery{} }
func (m *ServiceDiscovery) String() string            { return proto.CompactTextString(m) }
func (*ServiceDiscovery) ProtoMessage()               {}
func (*ServiceDiscovery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ServiceDiscovery) GetOrderServiceUrl() string {
	if m != nil {
		return m.OrderServiceUrl
	}
	return ""
}

type EventStore struct {
	AggregateId   string `protobuf:"bytes,1,opt,name=aggregate_id,json=aggregateId" json:"aggregate_id,omitempty"`
	AggregateType string `protobuf:"bytes,2,opt,name=aggregate_type,json=aggregateType" json:"aggregate_type,omitempty"`
	EventId       string `protobuf:"bytes,3,opt,name=event_id,json=eventId" json:"event_id,omitempty"`
	EventType     string `protobuf:"bytes,4,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EventData     string `protobuf:"bytes,5,opt,name=event_data,json=eventData" json:"event_data,omitempty"`
}

func (m *EventStore) Reset()                    { *m = EventStore{} }
func (m *EventStore) String() string            { return proto.CompactTextString(m) }
func (*EventStore) ProtoMessage()               {}
func (*EventStore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EventStore) GetAggregateId() string {
	if m != nil {
		return m.AggregateId
	}
	return ""
}

func (m *EventStore) GetAggregateType() string {
	if m != nil {
		return m.AggregateType
	}
	return ""
}

func (m *EventStore) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *EventStore) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *EventStore) GetEventData() string {
	if m != nil {
		return m.EventData
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "order.Order")
	proto.RegisterType((*Order_OrderItem)(nil), "order.Order.OrderItem")
	proto.RegisterType((*OrderResponse)(nil), "order.OrderResponse")
	proto.RegisterType((*OrderFilter)(nil), "order.OrderFilter")
	proto.RegisterType((*ServiceDiscovery)(nil), "order.ServiceDiscovery")
	proto.RegisterType((*EventStore)(nil), "order.EventStore")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrderService service

type OrderServiceClient interface {
	GetOrders(ctx context.Context, in *OrderFilter, opts ...grpc.CallOption) (OrderService_GetOrdersClient, error)
	CreateOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderResponse, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrders(ctx context.Context, in *OrderFilter, opts ...grpc.CallOption) (OrderService_GetOrdersClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_OrderService_serviceDesc.Streams[0], c.cc, "/order.OrderService/GetOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceGetOrdersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OrderService_GetOrdersClient interface {
	Recv() (*Order, error)
	grpc.ClientStream
}

type orderServiceGetOrdersClient struct {
	grpc.ClientStream
}

func (x *orderServiceGetOrdersClient) Recv() (*Order, error) {
	m := new(Order)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *Order, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := grpc.Invoke(ctx, "/order.OrderService/CreateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrderService service

type OrderServiceServer interface {
	GetOrders(*OrderFilter, OrderService_GetOrdersServer) error
	CreateOrder(context.Context, *Order) (*OrderResponse, error)
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrderFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OrderServiceServer).GetOrders(m, &orderServiceGetOrdersServer{stream})
}

type OrderService_GetOrdersServer interface {
	Send(*Order) error
	grpc.ServerStream
}

type orderServiceGetOrdersServer struct {
	grpc.ServerStream
}

func (x *orderServiceGetOrdersServer) Send(m *Order) error {
	return x.ServerStream.SendMsg(m)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Order)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order.OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*Order))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOrders",
			Handler:       _OrderService_GetOrders_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "order.proto",
}

func init() { proto.RegisterFile("order.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x93, 0xb8, 0xc4, 0xe3, 0x94, 0x8f, 0x55, 0x55, 0x99, 0x20, 0x44, 0xb0, 0x84, 0x14,
	0x71, 0x88, 0xa0, 0x3d, 0x70, 0xe3, 0x42, 0x00, 0xe5, 0x14, 0xe4, 0x94, 0xb3, 0xb5, 0xd8, 0xa3,
	0xb0, 0x52, 0xe2, 0x35, 0xbb, 0xe3, 0xa8, 0xb9, 0xf1, 0x8f, 0xf8, 0x8b, 0x68, 0x67, 0x1d, 0xc7,
	0xbd, 0x58, 0xf3, 0xde, 0xdb, 0xf9, 0xf0, 0xcc, 0x83, 0x58, 0x9b, 0x12, 0xcd, 0xa2, 0x36, 0x9a,
	0xb4, 0x08, 0x19, 0xa4, 0x7f, 0x07, 0x10, 0xae, 0x5d, 0x24, 0x5e, 0xc2, 0x98, 0xa9, 0x5c, 0x95,
	0x49, 0x30, 0x0b, 0xe6, 0x51, 0xf6, 0x84, 0xf1, 0xaa, 0x14, 0x37, 0x70, 0x69, 0x49, 0x52, 0x63,
	0x93, 0x01, 0x0b, 0x2d, 0x12, 0xaf, 0x20, 0x2a, 0x0c, 0x4a, 0xc2, 0x5c, 0x57, 0xc9, 0x70, 0x16,
	0xcc, 0x87, 0xd9, 0xd8, 0x13, 0xeb, 0x4a, 0x7c, 0x6a, 0xfb, 0xe5, 0x8a, 0x70, 0x6f, 0x93, 0xd1,
	0x6c, 0x38, 0x8f, 0x6f, 0x6f, 0x16, 0x7e, 0x86, 0xf5, 0xf9, 0xbb, 0x22, 0xdc, 0x67, 0xa0, 0x4f,
	0xa1, 0x9d, 0x56, 0x10, 0x75, 0x82, 0x10, 0x30, 0x2a, 0x74, 0x89, 0xed, 0x44, 0x1c, 0x3b, 0xae,
	0x92, 0x7b, 0x6c, 0x87, 0xe1, 0x58, 0xbc, 0x06, 0x68, 0x2a, 0x45, 0x79, 0x6d, 0x54, 0x81, 0x3c,
	0xcb, 0x20, 0x8b, 0x1c, 0xf3, 0xc3, 0x11, 0x62, 0x0a, 0xe3, 0x3f, 0x8d, 0xac, 0x48, 0xd1, 0x31,
	0x19, 0xcd, 0x82, 0x79, 0x98, 0x75, 0x38, 0x5d, 0xc2, 0x15, 0xf7, 0xcb, 0xd0, 0xd6, 0xba, 0xb2,
	0x5c, 0x4b, 0xd9, 0xdc, 0x36, 0x45, 0x81, 0xd6, 0x72, 0xe7, 0x71, 0x16, 0x29, 0xbb, 0xf1, 0x84,
	0xb8, 0x86, 0x10, 0x8d, 0xd1, 0xa6, 0xed, 0xef, 0x41, 0xba, 0x80, 0x98, 0xab, 0x7c, 0x53, 0x3b,
	0x42, 0x23, 0xde, 0x40, 0x6c, 0x51, 0x9a, 0xe2, 0x77, 0x4e, 0xf8, 0x40, 0xed, 0xf8, 0xe0, 0xa9,
	0x7b, 0x7c, 0xa0, 0xf4, 0x33, 0x3c, 0xdf, 0xa0, 0x39, 0xa8, 0x02, 0x97, 0xca, 0x16, 0xfa, 0x80,
	0xe6, 0x28, 0xde, 0xc3, 0x0b, 0xbf, 0x32, 0xeb, 0x95, 0xbc, 0x31, 0xbb, 0x36, 0xf5, 0x19, 0x0b,
	0x6d, 0xc6, 0x4f, 0xb3, 0x4b, 0xff, 0x05, 0x00, 0x5f, 0x0f, 0x58, 0xd1, 0x86, 0xb4, 0x41, 0xf1,
	0x16, 0x26, 0x72, 0xbb, 0x35, 0xb8, 0x75, 0xd7, 0xe8, 0x2e, 0x18, 0x77, 0xdc, 0xaa, 0x14, 0xef,
	0xe0, 0xe9, 0xf9, 0x09, 0x1d, 0xeb, 0xd3, 0x02, 0xaf, 0x3a, 0xf6, 0xfe, 0x58, 0xa3, 0xf3, 0x01,
	0xba, 0xba, 0xae, 0xca, 0xd0, 0xfb, 0x80, 0xf1, 0xaa, 0x74, 0x8b, 0xf1, 0x12, 0x67, 0x8f, 0x58,
	0x8c, 0x98, 0xe1, 0xcc, 0x4e, 0x2e, 0x25, 0xc9, 0x24, 0xec, 0xc9, 0x4b, 0x49, 0xf2, 0xf6, 0x00,
	0x93, 0x75, 0xef, 0x27, 0xc4, 0x47, 0x88, 0xbe, 0x23, 0x31, 0x65, 0x85, 0xe8, 0x1b, 0xc3, 0xef,
	0x70, 0x3a, 0xe9, 0x73, 0xe9, 0xc5, 0x87, 0x40, 0xdc, 0x41, 0xfc, 0xc5, 0xfb, 0x8b, 0x2d, 0xfb,
	0xe8, 0xc1, 0xf4, 0xba, 0x8f, 0x4e, 0xc7, 0x4c, 0x2f, 0x7e, 0x5d, 0xb2, 0xe1, 0xef, 0xfe, 0x07,
	0x00, 0x00, 0xff, 0xff, 0x40, 0xf2, 0x26, 0x9e, 0xff, 0x02, 0x00, 0x00,
}
